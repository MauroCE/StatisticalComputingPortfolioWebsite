<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>logistic-regression on Statistical Computing Portfolio Website</title>
    <link>/tags/logistic-regression/</link>
    <description>Recent content in logistic-regression on Statistical Computing Portfolio Website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/logistic-regression/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Optimization Portfolio</title>
      <link>/2020/01/optimization-portfolio/</link>
      <pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/01/optimization-portfolio/</guid>
      <description>library(MASS) library(microbenchmark) library(tidyverse) Utility functions The kernel_matrix function calculates the kernel matrix with squared exponential in a vectorized way. This function is borrowed from the profiling portfolio.
kernel_matrix &amp;lt;- function(X, sigmasq, Y=NULL){ if (is.null(Y)){ Y &amp;lt;- X } n &amp;lt;- nrow(X) m &amp;lt;- nrow(Y) # Find three matrices above Xnorm &amp;lt;- matrix(apply(X^2, 1, sum), n, m) Ynorm &amp;lt;- matrix(apply(Y^2, 1, sum), n, m, byrow=TRUE) XY &amp;lt;- tcrossprod(X, Y) return(exp(-(Xnorm - 2*XY + Ynorm) / (2*sigmasq))) } The function make_flags takes a y vector of length n and containing K class labels 0, 1, , K-1 and returns a matrix with n rows and K columns, where each row is a one-hot encoding for the class corresponding to that observation.</description>
    </item>
    
  </channel>
</rss>