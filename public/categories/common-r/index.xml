<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Common-R on Statistical Computing Portfolio Website</title>
    <link>/categories/common-r/</link>
    <description>Recent content in Common-R on Statistical Computing Portfolio Website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 10 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/common-r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Common R Portfolio</title>
      <link>/2020/01/common-r-portfolio/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/01/common-r-portfolio/</guid>
      <description>Vectorization As a general rule of thumb, we want to avoid writing for-loops as much as possible, and instead vectorize operations to speed up our calculations. For example suppose that we want to calculate \[\sum_{i=1}^n\cos(i) \times \sin(i) \times \tan(i) - \cos(i)^2-\sin(i)^3\]
At first one could write a function similar to this:
myfunc &amp;lt;- function(n){ total = 0 for (i in 1:n){ total = total + cos(i)*sin(i)*tan(i) - cos(i)^2 - sin(i)^3 } return(total) } We can see see how long a function takes to run in R by using the system.</description>
    </item>
    
  </channel>
</rss>